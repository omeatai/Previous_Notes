#1.INSTALL VENV
$ python3 -m venv venv
$ source venv/bin/activate
(venv) $ 


#2.CREATE REQUIREMENTS
$ pip freeze > requirements.txt
$ cat requirements.txt
numpy==1.9.2
requests==2.7.0


#3.INSTALL DJANGO
$ python -m pip install Django
$ django-admin


#4.VIEW DJANGO VERSION
$ python -m django --version


#5.CREATE DJANGO PROJECT
$ django-admin startproject monthly_challenges
$ django-admin startproject mypage
~/desktop/server/django django-admin startproject mypage


#6.CREATE PROJECT APPS
$ python manage.py startapp challenges


#7.RUN LOCAL SERVER
$ python manage.py runserver
>>>>>
Django version 3.1.5, using settings 'mypage.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CONTROL-C.


#8.CREATE VIEWS AND URLS
>>>APP.VIEWS.PY
from django.shortcuts import render
from django.http import HttpResponse

def index(request):
    return HttpResponse('welcome Home!')

def contact(request):
    return HttpResponse('Contact us page')

>>>APP.URLS.PY
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='home'),
    path('contact', views.contact, name='contact'),
]

>>>PROJECT.URLS.PY
from django.contrib import admin
from django.urls import include, path
import challenges

urlpatterns = [
    path('admin/', admin.site.urls),
    path('challenges/', include('challenges.urls'))
]


#9.DYNAMIC PATH SEGMENTS
>>>APP.VIEWS.PY
from django.shortcuts import render
from django.http import HttpResponse, HttpResponseNotFound

def index(request):
    return HttpResponse('welcome Home!')

def contact(request):
    return HttpResponse('Contact us page')

def my_challenges(request, month):
    challenges = None
    if month == 'january':
        challenges = 'This is January!'
    elif month == 'february':
        challenges = 'This is February!'
    elif month == 'march':
        challenges = 'This is March!'
    else:
        return HttpResponseNotFound('Not a supported Month!')    
    return HttpResponse(challenges)   

>>>APP.URLS.PY
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='home'),
    path('contact', views.contact, name='contact'),
    path('<month>', views.my_challenges, name='my-challenges'),
]

>>>PROJECT.URLS.PY
from django.contrib import admin
from django.urls import include, path
import challenges

urlpatterns = [
    path('admin/', admin.site.urls),
    path('challenges/', include('challenges.urls')),
]


#10.PATH CONVERTERS
>>>APP.VIEWS.PY
from django.shortcuts import render
from django.http import HttpResponse, HttpResponseNotFound

def index(request):
    return HttpResponse('welcome Home!')

def int_contact(request, contact):
    return HttpResponse(f'Contact number {contact}.')

def str_contact(request, contact):
    return HttpResponse(f'This is the contact of {contact}.')

>>>APP.URLS.PY
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='home'),
    path('<int:contact>',views.int_contact, name='int-contact'),
    path('<str:contact>', views.str_contact, name='str-contact'),
]


#11.Using Dictionary in view
>>>APP.VIEWS.PY
from django.shortcuts import render
from django.http import HttpResponse, HttpResponseNotFound

tasks = {
    'january': 'Take a walk in january',
    'february': 'Sing a song in february',
    'march': 'Play a sport in march',
    'april': 'Call the tailor in april',
    'may': 'Pray for mary in may',
    'june': 'Go for a marathon in june',
    'july': 'Play the drums in july',
    'august': 'Got to school in august',
    'september': 'Watch a movie in september',
    'october': 'Got to the cinema in october',
    'november': 'Study for exam in november',
    'december': 'Paint the house in december'
}

def index(request):
    return HttpResponse('welcome Home!')

def my_challenges(request, month):
    try:
        challenges = tasks[month]
        return HttpResponse(challenges)   
    except:     
        return HttpResponseNotFound('Not a supported Month!')  

>>>APP.URLS.PY
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='home'),
    path('<month>', views.my_challenges, name='my-challenges'),
]


#12.Using HttpResponseRedirect
>>>APP.VIEWS.PY
from django.shortcuts import render
from django.http import HttpResponse, HttpResponseNotFound, HttpResponseRedirect

tasks = {
    'january': 'Take a walk in january',
    'february': 'Sing a song in february',
    'march': 'Play a sport in march',
    'april': 'Call the tailor in april',
    'may': 'Pray for mary in may',
    'june': 'Go for a marathon in june',
    'july': 'Play the drums in july',
    'august': 'Got to school in august',
    'september': 'Watch a movie in september',
    'october': 'Got to the cinema in october',
    'november': 'Study for exam in november',
    'december': 'Paint the house in december'
}

def index(request):
    return HttpResponse('welcome Home!')

def my_challenges_num(request, month):
    try:
        months = list(tasks.keys())
        selected_month = months[month - 1]
        return HttpResponseRedirect(f"/challenges/{selected_month}")
    except:
        return HttpResponseNotFound('Invalid value for Month')

def my_challenges(request, month):
    try:
        challenges = tasks[month]
        return HttpResponse(challenges)   
    except:     
        return HttpResponseNotFound('Not a supported Month!')   

>>>APP.URLS.PY
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='home'),
    path('<int:month>', views.my_challenges_num, name='my-challenges-num'),
    path('<str:month>', views.my_challenges, name='my-challenges'),
]


#13.Using Reverse Function with Named URLS
>>>APP.VIEWS.PY
from django.shortcuts import render
from django.http import HttpResponse, HttpResponseNotFound, HttpResponseRedirect
from django.urls import reverse

tasks = {
    'january': 'Take a walk in january',
    'february': 'Sing a song in february',
    'march': 'Play a sport in march',
    'april': 'Call the tailor in april',
    'may': 'Pray for mary in may',
    'june': 'Go for a marathon in june',
    'july': 'Play the drums in july',
    'august': 'Got to school in august',
    'september': 'Watch a movie in september',
    'october': 'Got to the cinema in october',
    'november': 'Study for exam in november',
    'december': 'Paint the house in december'
}

def index(request):
    return HttpResponse('welcome Home!')

def my_challenges_num(request, month):
    try:
        months = list(tasks.keys())
        selected_month = months[month - 1]
        redirect = reverse("my-challenges", args=[selected_month])
        return HttpResponseRedirect(redirect)
    except:
        return HttpResponseNotFound('Invalid value for Month')

def my_challenges(request, month):
    try:
        challenges = tasks[month]
        return HttpResponse(challenges)   
    except:     
        return HttpResponseNotFound('Not a supported value for Month!')   

>>>APP.URLS.PY
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='home'),
    path('<int:month>', views.my_challenges_num, name='my-challenges-num'),
    path('<str:month>', views.my_challenges, name='my-challenges'),
]


#14.Using Static HTML 
>>>APP.VIEWS.PY
from django.shortcuts import render
from django.http import HttpResponse, HttpResponseNotFound, HttpResponseRedirect
from django.urls import reverse

tasks = {
    'january': 'Take a walk in january',
    'february': 'Sing a song in february',
    'march': 'Play a sport in march',
    'april': 'Call the tailor in april',
    'may': 'Pray for mary in may',
    'june': 'Go for a marathon in june',
    'july': 'Play the drums in july',
    'august': 'Got to school in august',
    'september': 'Watch a movie in september',
    'october': 'Got to the cinema in october',
    'november': 'Study for exam in november',
    'december': 'Paint the house in december'
}

def index(request):
    return HttpResponse('<h1>Welcome Home!</h1>')

def my_challenges_num(request, month):
    try:
        months = list(tasks.keys())
        selected_month = months[month - 1]
        redirect = reverse("my-challenges", args=[selected_month])
        return HttpResponseRedirect(redirect)
    except:
        return HttpResponseNotFound('<h1>Invalid value for Month</h1>')

def my_challenges(request, month):
    try:
        challenges = f"<h1>{tasks[month]}</h1>"
        return HttpResponse(challenges)   
    except:     
        return HttpResponseNotFound('<h1>Not a supported value for Month!</h1>')   

>>>APP.URLS.PY
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='home'),
    path('<int:month>', views.my_challenges_num, name='my-challenges-num'),
    path('<str:month>', views.my_challenges, name='my-challenges'),
]


#15.Using Dynamic HTML 
>>>APP.VIEWS.PY
from django.shortcuts import render
from django.http import HttpResponse, HttpResponseNotFound, HttpResponseRedirect
from django.urls import reverse

tasks = {
    'january': 'Take a walk in january',
    'february': 'Sing a song in february',
    'march': 'Play a sport in march',
    'april': 'Call the tailor in april',
    'may': 'Pray for mary in may',
    'june': 'Go for a marathon in june',
    'july': 'Play the drums in july',
    'august': 'Got to school in august',
    'september': 'Watch a movie in september',
    'october': 'Got to the cinema in october',
    'november': 'Study for exam in november',
    'december': 'Paint the house in december'
}

def index(request):
    list_items = ""
    months = list(tasks.keys())
    for month in months:
        capitalized_month = month.capitalize()
        path = reverse("my-challenges", args=[month])
        list_items += f"<li><a href='{path}'>{capitalized_month}</a></li>" 
        
    response_data = f"<ul>{list_items}</ul>"
    return HttpResponse(response_data)

def my_challenges_num(request, month):
    try:
        months = list(tasks.keys())
        selected_month = months[month - 1]
        redirect = reverse("my-challenges", args=[selected_month])
        return HttpResponseRedirect(redirect)
    except:
        return HttpResponseNotFound('<h1>Invalid value for Month</h1>')

def my_challenges(request, month):
    try:
        challenges = f"<h1>{tasks[month]}</h1>"
        return HttpResponse(challenges)   
    except:     
        return HttpResponseNotFound('<h1>Not a supported value for Month!</h1>')   

>>>APP.URLS.PY
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='home'),
    path('<int:month>', views.my_challenges_num, name='my-challenges-num'),
    path('<str:month>', views.my_challenges, name='my-challenges'),
]

















